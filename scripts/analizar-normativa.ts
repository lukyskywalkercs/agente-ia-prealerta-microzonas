#!/usr/bin/env tsx

import { analizarNormativaAlmassora } from '../agents/legal/legal_analyzer';

async function main() {
  console.log('‚öñÔ∏è Iniciando an√°lisis normativo para Almassora...');
  
  try {
    const resultado = await analizarNormativaAlmassora();
    
    console.log('\nüìã Resumen del an√°lisis normativo:');
    console.log('=====================================');
    console.log(`Municipio: ${resultado.municipio}`);
    console.log(`Fecha de an√°lisis: ${resultado.fecha_analisis}`);
    console.log(`Normativas aplicables: ${resultado.normativas_aplicables.length}`);
    
    console.log('\nüìä Criterios extra√≠dos:');
    resultado.criterios_extraidos.forEach((criterio, index) => {
      console.log(`${index + 1}. ${criterio.tipo}: ${criterio.descripcion}`);
      console.log(`   Fuente: ${criterio.fuente_normativa}`);
      console.log(`   Valor: ${criterio.valor}${criterio.unidad ? ' ' + criterio.unidad : ''}`);
      console.log('');
    });
    
    console.log('‚öôÔ∏è Configuraci√≥n recomendada:');
    console.log(`- Distancia m√≠nima de seguridad: ${resultado.configuracion_recomendada.distancia_minima_seguridad} metros`);
    console.log(`- Umbral de activaci√≥n: ${resultado.configuracion_recomendada.umbral_activacion}`);
    console.log(`- Responsabilidad principal: ${resultado.configuracion_recomendada.responsabilidad_principal}`);
    console.log(`- Coordinaci√≥n requerida: ${resultado.configuracion_recomendada.coordinacion_requerida.join(', ')}`);
    
    console.log('\n‚úÖ An√°lisis normativo completado exitosamente');
    
  } catch (error) {
    console.error('‚ùå Error en el an√°lisis normativo:', error);
    process.exit(1);
  }
}

if (import.meta.url === `file://${process.argv[1]}`) {
  main();
}


